<main class="user-reg">
    <div class="successerror">
        <div class="success" id="success">
            <p class="success-p">You have successfully registered</p>
        </div>
        <div class="error">
            <p class="error-p">Registration Failed. Try Again in sometime.</p>
        </div>
    </div>
    <div class="reg-con-bcc">
        <!-- only for image purpose -->
    </div>
    <div class="reg-con">
        
            <div class="reg-up-btn">
                <h1 class="reg-up">Sign Up</h1> 
                <p style="color: red; display: none;" class="wrong">Email Invalid*</p>
            </div>

            
           <form class="reg-form" enctype="multipart/form-data">

                <div class="input-div-reg">
                    <div class="user-profile-pic-div">
                        <img class="user-pic-img" height="90px" width="90px" src="/photos/user-reg.svg" alt="">
                        <input type="file" name="profilepic" id="profilepic" class="user-pic-input" accept="image/*">
                        <div class="plus-div-outer">
                            <div class="plus-div">
                                <div class="horizontal-div"></div>
                                <div class="vertical-div"></div>
                            </div>
                        </div>
                        
                    </div>
                    <div class="reg-name-div">
                        <label class="reg-h" for="name">Full Name</label>
                        <input type="text" autofocus autocomplete="off" name="username" id="name" class="reg-name-input" placeholder="John Doe">
                    </div>
                    <div class="reg-email-div reg-div">
                        <label class="reg-email reg-label" for="regemail">Email</label>
                        <input type="email" autocomplete="off" name="email" id="email" class="reg-email-input reg-inputs" placeholder="john.doe@example.com" required>
                    </div>

                    <div class="reg-password-div reg-div">
                        <img width="24px" class="reg-eye-close first-pass"  src="/photos/hidden.png" alt="">
                        <img width="24px" class="reg-eye-open first-pass"  src="/photos/eye.png" alt="">
                        <label class="reg-pass reg-label" for="regpass">Password</label>
                        <input type="password" autocomplete="off" name="regfirstpass" id="regfirstpass" class="reg-pass-input reg-inputs" placeholder="">
                        
                    </div>
                    <div class="reg-confirm-pass reg-div">
                        <img width="24px" class="reg-con-eye-close second-pass" src="/photos/hidden.png" alt="">
                        <img width="24px" class="reg-con-eye-open second-pass" src="/photos/eye.png" alt="">
                        <label class="reg-conpass reg-label" for="regconfirmpass">Confirm Password</label>
                        <input type="password" autocomplete="off" name="password" id="password" class="reg-con-pass-input reg-inputs" placeholder="" required>
                    </div>
                    <div class="warning-box">
                        <p style="color: red; display: none;" class="password-mismatch">Passwords do not match!</p>
                        <p style="color: red; display: none;" class="password-requirements">Password must be at least 6 characters with 1 capital letter and 1 special character</p>
                    </div>
                   
                    <div class="reg-submit-div">
                        <button type="submit" class="reg-btn">Submit</button>
                    </div>
                </div>
            </form>
            <a href="/user/login" class="dont"><h3>Already have an account? Sign In</h3></a>
    </div>  
</main>

<script>

    const profilepicinput = document.querySelector('.plus-div-outer');
    const profileinput = document.querySelector('#profilepic');
    profilepic.addEventListener('mouseover', () => {
        profilepicinput.style.opacity = "0.5";
        profilepicinput.style.cursor = "pointer";
        profilepicinput.style.transition = "opacity 0.3s ease-in-out";
    });
    profilepic.addEventListener('mouseout', () => {
        profilepicinput.style.opacity = "0.0125";
    });

    // Show preview of uploaded profile picture
    profileinput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const userPicImg = document.querySelector('.user-pic-img');
                userPicImg.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });






    const eyeClose = document.querySelector('.reg-eye-close');
    const eyeOpen = document.querySelector('.reg-eye-open');
    const password = document.querySelector('.reg-pass-input');
  
    
    eyeClose.addEventListener('click', () => {
        password.type = "text";
        eyeClose.style.display = "none";
        eyeOpen.style.display = "block";
    });

    eyeOpen.addEventListener('click', () => {
        password.type = "password";
        eyeClose.style.display = "block";
        eyeOpen.style.display = "none";
    });
    const eyeOpen2 = document.querySelector(".reg-con-eye-close");
    const eyeClose2 = document.querySelector(".reg-con-eye-open");
    const confirmPassword = document.querySelector('.reg-con-pass-input');
    eyeClose2.addEventListener('click', () => {
        confirmPassword.type = "password";
        eyeClose2.style.display = "none";
        eyeOpen2.style.display = "block";
    });

    eyeOpen2.addEventListener('click', () => {
        confirmPassword.type = "text";
        eyeClose2.style.display = "block";
        eyeOpen2.style.display = "none";
    });

    function validateEmail(email) {
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Basic regex for email validation
        return email.length >= 5 && email.length <= 254 && emailPattern.test(email);
    }
    const a = document.querySelector(".wrong");
    
    const emailToValid = document.querySelector(".reg-email-input");
    emailToValid.addEventListener("blur", () => {
        const emailValue = emailToValid.value;
        if (validateEmail(emailValue)) {
            a.style.display = "none";
        } else {
            a.style.display = "block";
        }
    }); 

    const firstPassword = document.querySelector('#regfirstpass');
    const conpass = document.querySelector('#password');
    const passwordMismatch = document.querySelector('.password-mismatch');

    // Check passwords match on input
    conpass.addEventListener('input', validatePasswords);
    firstPassword.addEventListener('input', validatePasswords);

    function validatePasswords() {
        if (firstPassword.value !== conpass.value) {
            passwordMismatch.style.display = 'block';
            conpass.style.borderColor = 'red';
            return false;
        } else {
            passwordMismatch.style.display = 'none';
            conpass.style.borderColor = '';
            return true;
        }
    }

    function validatePasswordStrength(password) {
        const minLength = 6;
        const hasUpperCase = /[A-Z]/.test(password);
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
        
        return password.length >= minLength && hasUpperCase && hasSpecialChar;
    }

    firstPassword.addEventListener('input', () => {
        const passwordRequirements = document.querySelector('.password-requirements');
        if (!validatePasswordStrength(firstPassword.value)) {
            passwordRequirements.style.display = 'block';
            firstPassword.style.borderColor = 'red';
        } else {
            passwordRequirements.style.display = 'none';
            firstPassword.style.borderColor = '';
        }
        validatePasswords();
    });

    const form = document.querySelector('.reg-form');

    form.addEventListener('submit', async(e)=> {
        e.preventDefault();

        if (!validatePasswords() || !validatePasswordStrength(firstPassword.value)) {
            return; // Stop form submission if passwords don't match or strength requirements not met
        }

        // Prepare form data including profile picture
        const formData = new FormData();
        const profilePicFile = document.querySelector('#profilepic').files[0];
        formData.append('profilepic', profilePicFile);
        formData.append('username', document.querySelector('.reg-name-input').value);
        formData.append('email', document.querySelector('.reg-email-input').value);
        formData.append('password', document.querySelector('.reg-con-pass-input').value);
        
        try{
            const res = await fetch("/user/register", {
                method: 'POST',
                body: formData
                // Note: Do not set Content-Type header; browser will set it automatically for FormData
            });
            const data = await res.json();
            if(data.success) {
                window.location.href = '/user/login';
            }
        }catch(error){
            console.log(error);
        }
    });
</script>
